{"ast":null,"code":"import axios from 'axios';\n\n// ‚öôÔ∏è Cria√ß√£o do cliente Axios com baseURL e suporte a cookies/sess√£o\nconst api = axios.create({\n  baseURL: '/',\n  // com proxy no package.json, aponta pro Django\n  headers: {\n    'Content-Type': 'application/json'\n  }\n  // withCredentials: true  // necess√°rio para autentica√ß√£o baseada em sess√£o\n});\n\n// üõ°Ô∏è Interceptador de requisi√ß√£o (futuro: inserir token JWT)\napi.interceptors.request.use(config => {\n  // Se estiver usando JWT, descomente abaixo:\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// üö® Interceptador de respostas com tratamento global de erro\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    const {\n      status\n    } = error.response;\n    if (status === 401) {\n      console.warn('Sess√£o expirada ou n√£o autenticado.');\n      // Redirecionar pro login, se necess√°rio:\n      // window.location.href = '/login';\n    } else if (status >= 500) {\n      console.error('Erro no servidor:', error.response.data);\n    }\n  } else {\n    console.error('Erro na requisi√ß√£o:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","console","warn","data","message"],"sources":["/home/deniscamargo/projetos/painel_gerencial_dp/frontend/src/api/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// ‚öôÔ∏è Cria√ß√£o do cliente Axios com baseURL e suporte a cookies/sess√£o\r\nconst api = axios.create({\r\n  baseURL: '/',  // com proxy no package.json, aponta pro Django\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  // withCredentials: true  // necess√°rio para autentica√ß√£o baseada em sess√£o\r\n});\r\n\r\n// üõ°Ô∏è Interceptador de requisi√ß√£o (futuro: inserir token JWT)\r\napi.interceptors.request.use(\r\n  config => {\r\n    // Se estiver usando JWT, descomente abaixo:\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  error => Promise.reject(error)\r\n);\r\n\r\n// üö® Interceptador de respostas com tratamento global de erro\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response) {\r\n      const { status } = error.response;\r\n      if (status === 401) {\r\n        console.warn('Sess√£o expirada ou n√£o autenticado.');\r\n        // Redirecionar pro login, se necess√°rio:\r\n        // window.location.href = '/login';\r\n      } else if (status >= 500) {\r\n        console.error('Erro no servidor:', error.response.data);\r\n      }\r\n    } else {\r\n      console.error('Erro na requisi√ß√£o:', error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,GAAG;EAAG;EACfC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;EACA;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACR;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACDI,KAAK,IAAIC,OAAO,CAACC,MAAM,CAACF,KAAK,CAC/B,CAAC;;AAED;AACAX,GAAG,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC3BQ,QAAQ,IAAIA,QAAQ,EACpBH,KAAK,IAAI;EACP,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB,MAAM;MAAEC;IAAO,CAAC,GAAGJ,KAAK,CAACG,QAAQ;IACjC,IAAIC,MAAM,KAAK,GAAG,EAAE;MAClBC,OAAO,CAACC,IAAI,CAAC,qCAAqC,CAAC;MACnD;MACA;IACF,CAAC,MAAM,IAAIF,MAAM,IAAI,GAAG,EAAE;MACxBC,OAAO,CAACL,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACG,QAAQ,CAACI,IAAI,CAAC;IACzD;EACF,CAAC,MAAM;IACLF,OAAO,CAACL,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACQ,OAAO,CAAC;EACrD;EACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}